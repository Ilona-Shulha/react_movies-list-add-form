{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","newTitle","newDescription","newImgUrl","newImbdUrl","newImbdId","newTitleValid","newImgUrlValid","newImbdUrlValid","newImbdIdValid","changeInput","e","target","name","value","setState","this","invalidSubmit","onSubmit","preventDefault","htmlFor","formNoValidate","type","id","classNames","placeholder","onChange","onBlur","trim","match","disabled","onClick","props","onAdd","React","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0d64e9a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: any,\n};\ntype State = {\n  newTitle?: string,\n  newDescription?: string,\n  newImgUrl?: string,\n  newImbdUrl?: string,\n  newImbdId?: string,\n  newTitleValid?: boolean,\n  newImgUrlValid?: boolean,\n  newImbdUrlValid?: boolean,\n  newImbdIdValid?: boolean,\n};\n\nexport class NewMovie extends React.Component<Props, State> {\n  state: State = {\n    newTitle: '',\n    newDescription: '',\n    newImgUrl: '',\n    newImbdUrl: '',\n    newImbdId: '',\n    newTitleValid: true,\n    newImgUrlValid: true,\n    newImbdUrlValid: true,\n    newImbdIdValid: true,\n  };\n\n  changeInput = (e: { target: { name: string; value: string; }; }) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const {\n      newTitle, newDescription, newImbdId, newImbdUrl, newImgUrl, newTitleValid,\n      newImgUrlValid, newImbdUrlValid, newImbdIdValid,\n    } = this.state;\n    const invalidSubmit = !newImbdIdValid || !newTitleValid || !newImgUrlValid\n      || !newImbdUrlValid || !newTitle || !newImbdId || !newImbdUrl\n      || !newImgUrl;\n\n    return (\n      <form\n        onSubmit={(e) => e.preventDefault()}\n        className=\"form\"\n      >\n        <label htmlFor=\"new-title\">\n          <p>\n            Enter title of movie\n          </p>\n          <input\n            name=\"newTitle\"\n            formNoValidate\n            type=\"text\"\n            id=\"new-title\"\n            value={newTitle}\n            className={classNames('new-title', { 'error-input': !newTitleValid })}\n            placeholder=\"Title of movie\"\n            onChange={this.changeInput}\n            onBlur={(e) => {\n              const checkText = !e.target.value.trim() || !e.target.value.match(/^[а-яА-ЯёЁa-zA-Z0-9\\s]+$/);\n\n              if (checkText) {\n                this.setState({\n                  newTitleValid: false,\n                });\n              } else {\n                this.setState({\n                  newTitleValid: true,\n                });\n              }\n            }}\n          />\n        </label>\n        <div\n          className={classNames('error', { 'error-visible': !newTitleValid })}\n        >\n          Enter correct info\n        </div>\n        <label htmlFor=\"new-description\" className=\"new-description\">\n          <p>\n            Enter description of movie\n          </p>\n          <input\n            name=\"newDescription\"\n            formNoValidate\n            type=\"text\"\n            id=\"new-description\"\n            value={newDescription}\n            onChange={this.changeInput}\n            placeholder=\"Description of movie\"\n          />\n        </label>\n        <label htmlFor=\"new-img-url\">\n          <p>\n            Enter imgUrl of movie\n          </p>\n          <input\n            name=\"newImgUrl\"\n            formNoValidate\n            type=\"text\"\n            id=\"new-img-url\"\n            value={newImgUrl}\n            className={classNames('new-img-url', { 'error-input': !newImgUrlValid })}\n            placeholder=\"imgUrl\"\n            onChange={this.changeInput}\n            onBlur={(e) => {\n              const checkUrl = !e.target.value.trim()\n                || !e.target.value.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n              if (checkUrl) {\n                this.setState({\n                  newImgUrlValid: false,\n                });\n              } else {\n                this.setState({\n                  newImgUrlValid: true,\n                });\n              }\n            }}\n          />\n        </label>\n        <div\n          className={classNames('error', { 'error-visible': !newImgUrlValid })}\n        >\n          Enter correct info\n        </div>\n        <label htmlFor=\"new-imbd-url\">\n          <p>\n            Enter imdbUrl of movie\n          </p>\n          <input\n            name=\"newImbdUrl\"\n            formNoValidate\n            type=\"text\"\n            id=\"new-imbd-url\"\n            value={newImbdUrl}\n            className={classNames('new-imbd-url', { 'error-input': !newImbdUrlValid })}\n            placeholder=\"imdbUrl\"\n            onChange={this.changeInput}\n            onBlur={(e) => {\n              const checkUrl = !e.target.value.trim()\n                || !e.target.value.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n              if (checkUrl) {\n                this.setState({\n                  newImbdUrlValid: false,\n                });\n              } else {\n                this.setState({\n                  newImbdUrlValid: true,\n                });\n              }\n            }}\n          />\n        </label>\n        <div\n          className={classNames('error', { 'error-visible': !newImbdUrlValid })}\n        >\n          Enter correct info\n        </div>\n        <label htmlFor=\"new-imbd-id\">\n          <p>\n            Enter imdbId of movie\n          </p>\n          <input\n            name=\"newImbdId\"\n            formNoValidate\n            type=\"text\"\n            id=\"new-imbd-id\"\n            value={newImbdId}\n            className={classNames('new-imbd-id', { 'error-input': !newImbdIdValid })}\n            placeholder=\"imdbId\"\n            onChange={this.changeInput}\n            onBlur={(e) => {\n              const checkText = !e.target.value || !e.target.value.match(/^[а-яА-ЯёЁa-zA-Z0-9]+$/);\n\n              if (checkText) {\n                this.setState({\n                  newImbdIdValid: false,\n                });\n              } else {\n                this.setState({\n                  newImbdIdValid: true,\n                });\n              }\n            }}\n          />\n        </label>\n        <div\n          className={classNames('error', { 'error-visible': !newImbdIdValid })}\n        >\n          Enter correct info\n        </div>\n        <button\n          className=\"add-button\"\n          disabled={invalidSubmit}\n          type=\"submit\"\n          onClick={() => {\n            const movie = {\n              title: newTitle,\n              description: newDescription,\n              imgUrl: newImgUrl,\n              imdbUrl: newImbdUrl,\n              imdbId: newImbdId,\n            };\n\n            this.props.onAdd(movie);\n\n            this.setState({\n              newTitle: '',\n              newDescription: '',\n              newImgUrl: '',\n              newImbdUrl: '',\n              newImbdId: '',\n            });\n          }}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}